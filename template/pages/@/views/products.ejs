<%
// load products page content
const pageProducts = _.cms('products')

// current product body
const { body } = await _.resolveRoute()
const breadcrumbs = []
_.ecomUtils.categoriesList(body).forEach(categoryName => {
  const findCategory = category => category.name === categoryName
  const category = (body.categories && body.categories.find(findCategory)) ||
    _.categories.find(findCategory)
  if (category) {
    breadcrumbs.push({
      name: _.ecomUtils.name(category),
      link: `/${category.slug}`
    })
  }
})
breadcrumbs.push({
  name: _.ecomUtils.name(body),
  link: `/${body.slug}`
})
%>

<% if (pageProducts.pitbar) { %>
  <%- await include('components/pitbar', { _ }) %>
<% } else { %>
  <script type="html/text" data-cms-html>
    <%- await include('components/pitbar', { _ }) %>
  </script>
<% } %>

<div class="container py-1 py-sm-2 py-lg-4">
  <%- await include('components/breadcrumbs', { _, opt: { breadcrumbs } }) %>

  <div class="product" id="product">
    <section
      id="product-block"
      class="product__block row"
      data-to-render="true"
    >
      <% if (body.pictures) { %>
        <% const imgObj = _.ecomUtils.img(body, null, 'big') %>
        <% if (imgObj) { %>
          <div class="col-12 col-md-6">
            <div class="product__picture">
              <picture
                class="lozad fade"
                data-iesrc="<%= imgObj.url %>"
                data-alt="<%= imgObj.alt %>"
              >
                <source
                  srcset="<%= _.ecomUtils.img(body).url %>"
                  media="(max-width: 399.98px)"
                >
                <source srcset="<%= imgObj.url %>" media="(min-width: 400px)">
              </picture>
            </div>
          </div>
        <% } %>
      <% } %>

      <div class="col">
        <h1 class="product__name">
          <%= _.ecomUtils.name(body) %>
        </h1>
        <button
          type="button"
          class="product__buy btn btn-lg btn-primary"
          disabled
        >
          <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
          </div>
          <%= _.dictionary().buy %>
        </button>
        <% if (body.short_description) { %>
          <p class="lead product__info">
            <%= body.short_description %>
          </p>
        <% } %>
      </div>
    </section>

    <%
    const showcaseTypes = ['related', 'recommended']
    for (let i = 0; i < showcaseTypes.length; i++) {
      const showcaseType = showcaseTypes[i]
      if (pageProducts[showcaseType] && pageProducts[showcaseType].showcase) {
        const { title } = pageProducts[showcaseType]
        // get list of products from Graphs API
        const url = `/products/${body._id}/${showcaseType}.json`
        try {
          const { data } = await _.ecomClient.graphs({ url })
          const productIds = _.ecomUtils.recommendedIds(data)
          let items = []
          if (Array.isArray(productIds) && productIds.length) {
            // search related/recommended items by IDs
            const search = new _.EcomSearch()
            await search.setProductIds(productIds).fetch()
            items = search.getItems()
          }
          %>
          <%- await include('components/products-carousel', { opt: { items, title, showcaseType } }) %>
          <%
        } catch (err) {
          console.error(err)
        }
      }%>
      <script type="html/text" data-cms-html>
        <%- await include('components/product-block', {opt: { title: pageProducts[showcaseType].title, showcaseType }}) %>
      </script>
    <% } %>

    <% if (body.body_html) { %>
      <section id="product-description" class="product__description">
        <p class="lead">
          <a href="#description" name="description">#</a>
          <%= _.dictionary().product_description %>
        </p>
        <div class="html-clearfix">
          <%- body.body_html.replace(
            /<img ([^/>]+)?src=['"]([^'"]+)['"]([^/>]+)?\/?>/g,
            '<img class="lozad" data-src="$2" $1>'
          ).replace(
            /<img class="lozad" data-src="([^'"]+)"([^>]+)class=['"]([^'"]+)['"]([^/>]+)?>/g,
            '<img class="lozad $3" data-src="$1" $2 $4>'
          ) %>
        </div>
      </section>
    <% } %>

    <% if (body.specifications) { %>
      <section id="product-specs" class="product__specs">
        <p class="lead">
          <a href="#specs" name="specs">#</a>
          <%= _.dictionary().product_specifications %>
        </p>
        <table class="table table-striped">
          <tbody>
            <% for (const gridId in body.specifications) {
              if (body.specifications[gridId]) {
                %>
                <tr>
                  <td class="text-muted">
                    <%= _.ecomUtils.gridTitle(gridId, _.grids) %>
                  </td>
                  <td>
                    <%= _.ecomUtils.specTextValue(body, gridId, _.grids) %>
                  </td>
                </tr>
                <%
              }
            } %>
          </tbody>
        </table>
      </section>
    <% } %>

    <section class="md-content" data-cms-bind="products.additional_content" data-cms-md="true">
      <% if (pageProducts.additional_content) { %>  
        <%- _.md.render(pageProducts.additional_content) %>
      <% } %>
    </section>
  </div>
</div>

<%
// prepare data for product JSON-LD output
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: body.sku,
  description: body.short_description || body.meta_description || _.ecomUtils.name(body),
  name: _.ecomUtils.name(body),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${body.slug}`,
    availability: `${(_.ecomUtils.inStock(body) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(body),
    itemCondition: `http://schema.org/${(body.condition === 'new' ? 'New' : 'Used')}Condition`,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}
if (body.brands && body.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: body.brands[0].name
  }
}
if (body.pictures && body.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(body, null, 'zoom').url
}
if (body.mpn && body.mpn[0]) {
  productJsonLd.mpn = body.mpn[0]
}
%>
<script type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>
